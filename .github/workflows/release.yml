name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GPG_FINGERPRINT: 92868EBC70DF83601ED085F7CE5D02E4C68038C1
  DOCKER_CLI_EXPERIMENTAL: enabled

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Wait for tests to succeed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WAIT_BRANCH: ${{ github.ref_name }}
          WAIT_SHA: ${{ github.sha }}
          WAIT_EVENT: push
          WAIT_WORKFLOW_NAME: Validate
        run: ./.github/wait-for-workflow.sh

      - name: Unshallow
        run: git fetch --prune --unshallow

      - id: go-version
        run: |
          go_version="$(awk '/^go/{print $2}' go.mod)"
          echo "::set-output name=go_version::${go_version}.x"

      - name: Allow arm Docker builds # https://github.com/linuxkit/linuxkit/tree/master/pkg/binfmt
        run: sudo docker run --privileged linuxkit/binfmt:v0.8

      - name: Import GPG key
        id: import_gpg
        run: |
          echo -e "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --import --batch --no-tty
          printf "%s:6:\n" "${GPG_FINGERPRINT}" | gpg --import-ownertrust
          echo "::set-output name=fingerprint::$(gpg --with-colons --list-keys | awk -F: '/^pub/ { print $5 }')"

      - name: Github Docker login
        run: echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Setup go
        run: curl -sL https://raw.githubusercontent.com/maxatome/install-go/v3.3/install-go.pl | perl - ${{ steps.go-version-matrix.outputs.go_version }} $HOME

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~/AppData/Local/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ needs.DetermineVersion.outputs.go_version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: go-mod

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --config .goreleaser.yaml
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
