name: Validate

on:
  pull_request:
  push:

env:
  GO111MODULE: on

jobs:
  Pre-Commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.3
        env:
          SKIP: golangci-lint

  GolangCI-Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run linters
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.43.0

  Vet:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run vet
        run: go vet ./...

  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        go: [ '1.17' ]
        os: [ ubuntu-latest ]
#        go: [ '1.17', '1.16' ]
#        os: [ ubuntu-latest, macOS-latest, windows-latest ]
    name: ${{ matrix.os }} Go ${{ matrix.go }} Tests
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: go test -v -cover -race ./...

  Coverage:
    runs-on: ubuntu-latest
    if: false
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Calc coverage
        run: |
          go test -v -covermode=count -coverprofile=coverage.out ./...
      - name: Convert coverage.out to coverage.lcov
        uses: jandelgado/gcov2lcov-action@v1.0.8
      - name: Coveralls
        uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov

  GoReleaser:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Allow arm Docker builds # https://github.com/linuxkit/linuxkit/tree/master/pkg/binfmt
        run: sudo docker run --privileged linuxkit/binfmt:v0.8

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --config .goreleaser.yaml --rm-dist --skip-publish --skip-sign --snapshot
